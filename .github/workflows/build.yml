name: Build images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.0

    - name: Install nix and packages
      run: |
        curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install --no-confirm
        . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
        nix-env -i nixos-generators qemu -f '<nixpkgs>'

    - name: Build images
      run: |
        set -e

        # Create the raw image
        dd if=/dev/null of=disk.img bs=16M seek=256
        mkfs.ext4 disk.img

        # Populate the image rootfs
        mkdir rootfs
        ld=$(sudo losetup -f)
        sudo losetup $ld disk.img
        sudo mount $ld rootfs

        ls rootfs
        basefs=$(nixos-generate -f lxc -c config.nix)
        sudo tar xJf $basefs -C rootfs
        echo "------"
        ls rootfs

        sudo umount $ld
        sudo losetup -d $ld

        # Boot the VM
        qemu-system-x86_64 \
          -m 1024 \
          -kernel /boot/vmlinuz \
          -append "console=ttyS0 root=/dev/sda1 rw" \
          -nographic \
          -no-reboot \
          -drive file=./disk.img,format=raw,if=virtio

        ld=$(losetup -f)
        sudo losetup $ld disk.img
        sudo mount $ld rootfs

        # Create /etc/gshadow if it doesn't exist
        touch rootfs/etc/gshadow

        # Export the modified rootfs
        tar -cJf nichrome-x64.tar.xz -C rootfs .

        sudo umount $ld
        sudo losetup -d $ld
        rm -rf rootfs disk.img

    - name: Upload artifacts
      run: |
        ls -l result*/